/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package serialj_cmd;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import jssc.SerialPortList;

/**
 *
 * @author Xiaoxing
 */
public class UI extends javax.swing.JFrame {

    final private String[] portNames;
    private LogUpdator u;
    private PortInterface p;
    private ScriptExecutor se;
    final private String ver = "ZX Serial 1.8 @" + getPID();

    /**
     * Creates new form UI
     */
    public UI() {

        try {
            URL iconUrl = getClass().getResource("/rsrc/icon.png");
            System.out.println(iconUrl.toString());
            this.setIconImage(ImageIO.read(iconUrl));
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        portNames = SerialPortList.getPortNames();
        u = new LogUpdator();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        MainPanel = new javax.swing.JPanel();
        cboxCOMList = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        btnBatch = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        btnScript = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(ver);
        setMaximumSize(new java.awt.Dimension(512, 2147483647));
        setPreferredSize(new java.awt.Dimension(300, 336));

        MainPanel.setPreferredSize(new java.awt.Dimension(300, 300));
        MainPanel.setLayout(new java.awt.GridBagLayout());

        cboxCOMList.setFont(cboxCOMList.getFont());
        cboxCOMList.setModel(new javax.swing.DefaultComboBoxModel(portNames));
        cboxCOMList.setMinimumSize(new java.awt.Dimension(70, 24));
        cboxCOMList.setPreferredSize(new java.awt.Dimension(70, 24));
        cboxCOMList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxCOMListActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.04;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(cboxCOMList, gridBagConstraints);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 100));

        txtLog.setEditable(false);
        txtLog.setColumns(12);
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setBorder(null);
        txtLog.setMaximumSize(new java.awt.Dimension(200, 200));
        txtLog.setPreferredSize(null);
        jScrollPane1.setViewportView(txtLog);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.weighty = 0.9;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        MainPanel.add(jScrollPane1, gridBagConstraints);

        jButton1.setFont(jButton1.getFont());
        jButton1.setText("1");
        jButton1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton1.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton1.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton1.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton1, gridBagConstraints);

        jButton2.setFont(jButton2.getFont());
        jButton2.setText("2");
        jButton2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton2.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton2.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton2.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton2, gridBagConstraints);

        jButton3.setFont(jButton3.getFont());
        jButton3.setText("3");
        jButton3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton3.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton3.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton3.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton3, gridBagConstraints);

        jButton4.setFont(jButton4.getFont());
        jButton4.setText("4");
        jButton4.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton4.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton4.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton4.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton4, gridBagConstraints);

        jButton5.setFont(jButton5.getFont());
        jButton5.setText("5");
        jButton5.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton5.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton5.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton5.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton5, gridBagConstraints);

        jButtonReset.setFont(jButtonReset.getFont());
        jButtonReset.setText("RESET");
        jButtonReset.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonReset.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButtonReset.setMinimumSize(new java.awt.Dimension(70, 24));
        jButtonReset.setPreferredSize(new java.awt.Dimension(70, 24));
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.04;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButtonReset, gridBagConstraints);

        jButton6.setFont(jButton6.getFont());
        jButton6.setText("6");
        jButton6.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton6.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton6.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton6.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton6, gridBagConstraints);

        jButton7.setFont(jButton7.getFont());
        jButton7.setText("7");
        jButton7.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton7.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton7.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton7.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton7, gridBagConstraints);

        jButton8.setFont(jButton8.getFont());
        jButton8.setText("8");
        jButton8.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton8.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton8.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton8.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton8, gridBagConstraints);

        jButton9.setFont(jButton9.getFont());
        jButton9.setText("9");
        jButton9.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton9.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton9.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton9.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton9, gridBagConstraints);

        jButton0.setFont(jButton0.getFont());
        jButton0.setText("0");
        jButton0.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton0.setMaximumSize(new java.awt.Dimension(32767, 32767));
        jButton0.setMinimumSize(new java.awt.Dimension(20, 24));
        jButton0.setPreferredSize(new java.awt.Dimension(20, 24));
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.02;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(jButton0, gridBagConstraints);

        btnBatch.setFont(btnBatch.getFont());
        btnBatch.setText("Batch");
        btnBatch.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnBatch.setMaximumSize(new java.awt.Dimension(32767, 32767));
        btnBatch.setMinimumSize(new java.awt.Dimension(55, 24));
        btnBatch.setPreferredSize(new java.awt.Dimension(55, 24));
        btnBatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.04;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(btnBatch, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        MainPanel.add(jLabel1, gridBagConstraints);

        btnScript.setText("Script");
        btnScript.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnScript.setMaximumSize(new java.awt.Dimension(32767, 32767));
        btnScript.setMinimumSize(new java.awt.Dimension(55, 24));
        btnScript.setPreferredSize(new java.awt.Dimension(55, 24));
        btnScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScriptActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.04;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        MainPanel.add(btnScript, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboxCOMListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxCOMListActionPerformed
        //STOP First
//        p.
        if (p != null) {
            p.stop();
        }
//        btnRecord.setEnabled(true);
//        btnStop.setEnabled(false);
//        btnClear.setEnabled(true);
//        jButton1.setEnabled(false);
//        jButton2.setEnabled(false);
//        jButton3.setEnabled(false);
//        jButton4.setEnabled(false);
//        jButton5.setEnabled(false);
//        jButtonReset.setEnabled(false);
//        this.setTitle(portNames[cboxCOMList.getSelectedIndex()] + " " + ver);

        p = new PortAccessor(portNames[cboxCOMList.getSelectedIndex()]);
        if (p.start(u)) {
            String comPort = portNames[cboxCOMList.getSelectedIndex()];
            this.setTitle(comPort + " " + ver);
        }

    }//GEN-LAST:event_cboxCOMListActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        p.writeByte((byte) 0x31);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        p.writeByte((byte) 0x2a);
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        p.writeByte((byte) 0x32);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        p.writeByte((byte) 0x33);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        p.writeByte((byte) 0x34);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        p.writeByte((byte) 0x35);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        p.writeByte((byte) 0x36);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        p.writeByte((byte) 0x37);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        p.writeByte((byte) 0x38);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        p.writeByte((byte) 0x39);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
        p.writeByte((byte) 0x30);
    }//GEN-LAST:event_jButton0ActionPerformed

    private void btnBatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatchActionPerformed
        if (cboxCOMList.getItemCount() > 0) {
            if (btnBatch.isSelected()) {
                if (p != null) {
                    p.stop();
                }
                cboxCOMList.setEnabled(false);
                p = new PortAccessorArray(portNames);
                if (!p.start(u)) {
                    u.updateString("Error: One or more serial port failed to start!\r\n");
                }
            } else {
                p.stop();
                cboxCOMList.setEnabled(true);
                p = new PortAccessor(portNames[cboxCOMList.getSelectedIndex()]);
                if (p.start(u)) {
                    String comPort = portNames[cboxCOMList.getSelectedIndex()];
                    this.setTitle(comPort + " " + ver);
                }
            }
        }
    }//GEN-LAST:event_btnBatchActionPerformed

    private void btnScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScriptActionPerformed
        if (btnScript.isSelected()) {
            JFileChooser fc = new JFileChooser();
            fc.setCurrentDirectory((new File(".")));
            fc.setFileFilter(new javax.swing.filechooser.FileFilter() {

                @Override
                public String getDescription() {
                    return "Script Files (.txt)";
                }

                @Override
                public boolean accept(File f) {
                    if (f.isDirectory() || f.getAbsolutePath().endsWith(".txt")) {
                        return true;
                    }
                    return false;
                }

            });
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File f = fc.getSelectedFile();
                u.updateString("Running Script " + f.getName());
                se = new ScriptExecutor(f, p);
                (new Thread(se)).start();
            }
        } else {
            if (null != se) {
                se.stop();
            }
            u.updateString("Script stopped");
        }
    }//GEN-LAST:event_btnScriptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UI().setVisible(true);
        });
    }

    public class LogUpdator {

        final private String[] hName;
        final StringBuilder logTxt;

        public LogUpdator() {
            logTxt = new StringBuilder();
            logTxt.ensureCapacity(1000);
            hName = eventNames.init();
        }

        synchronized public void updateEvent(int[] event) {
            updateString(evt2Str(event));
        }

        synchronized public void updateString(String str) {
            logTxt.append(str).append("\r\n");
            while (logTxt.length() > 500) {
                logTxt.delete(0, logTxt.indexOf("\r\n") + 2);
            }
            final String s = logTxt.toString();
            try {
                if (SwingUtilities.isEventDispatchThread()) {
                    txtLog.setText(s);
                } else {
                    SwingUtilities.invokeAndWait(() -> {
                        txtLog.setText(s);
                    });
                }
            } catch (InterruptedException | InvocationTargetException ex) {
                Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        private String evt2Str(int[] evt) {
            switch (evt[1]) {
                case 0x55:
                    return Integer.toString(evt[0]) + "," + ((evt[2] > 79) ? evt[2] : hName[evt[2]]) + "," + Integer.toString(evt[3]);
                case 0x00:
                    if (evt[2] == 0x01 && evt[3] == 0x02 && evt[4] == 0x03) {
                        return Integer.toString(evt[0]) + ", Manual Reset";
                    }
                case 0xff:
                    return Integer.toString(evt[0]) + ", Communication Error";
                default:
                    return "unknown";
            }
        }
    }

    private long getPID() {
        String processName
                = java.lang.management.ManagementFactory.getRuntimeMXBean().getName();
        return Long.parseLong(processName.split("@")[0]);
    }

    class PortManager {

        boolean batch;
        PortAccessor currentPort;
        PortAccessor[] allPorts;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private javax.swing.JToggleButton btnBatch;
    private javax.swing.JToggleButton btnScript;
    private javax.swing.JComboBox cboxCOMList;
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables

}
